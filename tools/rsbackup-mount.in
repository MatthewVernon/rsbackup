#! /usr/bin/env bash
#
# Copyright Â© 2011, 2012 Richard Kettlewell.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
set -e

action=mount
act=""
keyfile=""

while [ $# -gt 0 ]; do
  case "$1" in
  --unmount | -u )
    shift
    action=unmount
    ;;
  --dry-run | -n )
    shift
    act="echo"
    ;;
  --key-file | -k )
    shift
    keyfile="$1"
    shift
    ;;
  --help | -h )
    cat <<EOF
Usage:
  rsbackup-mount [OPTIONS] [--] [DEVICES]

Options:
  --unmount, -u        Unmount instead of mount
  --dry-run, -n        Display commands but do nothing
  --key-file, -k PATH  Path to encryption key
  --help, -h           Display usage message
  --version, -V        Display version string
EOF
    exit 0
    ;;
  -V | --version )
    echo "rsbackup-mount _version_"
    exit 0
    ;;
  -- )
    shift
    break
    ;;
  -* )
    echo "ERROR: unknown option '$1'" >&2
    exit 1
    ;;
  * )
    break
    ;;
  esac
done

. /etc/rsbackup/devices

if [ $# = 0 ]; then
  set $devices
fi

case $action in
mount )
  for device; do
    plain=$(eval echo \$${device}_plain)
    if [ ! -e /dev/mapper/$device -a -z "$plain" ]; then
      uuid=$(eval echo \$${device}_uuid)
      if [ -n "$keyfile" ]; then
        $act cryptsetup luksOpen --key-file "$keyfile" /dev/disk/by-uuid/$uuid $device
      else
	$act cryptsetup luksOpen /dev/disk/by-uuid/$uuid $device
      fi
    fi
    if [ ! -e /$device/device-id ]; then
      $act mount /$device
    fi
  done
  ;;
unmount )
  for device; do
    if [ -e /$device/device-id ]; then
      $act umount /$device
    fi
    if [ -e /dev/mapper/$device ]; then
      $act cryptsetup luksClose $device
    fi
  done
  ;;
esac
